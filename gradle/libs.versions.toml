[versions]
agp = "8.12.2"
android-compileSdk = "36"
android-minSdk = "24"
android-targetSdk = "36"
androidx-testExt = "1.3.0"
androidx-activity = "1.11.0"
androidx-appcompat = "1.7.1"
androidx-core = "1.17.0"
androidx-espresso = "3.7.0"
androidx-lifecycle = "2.9.4"
androidx-collection = "1.5.0"
composeHotReload = "1.0.0-rc02"
composeMultiplatform = "1.9.0"
junit = "4.13.2"
kotlin = "2.2.20"
kotlinx-coroutines = "1.10.2"
kotlinx-collections-immutable = "0.4.0"
#composeWebView = "2.0.2"
runtimeDesktop = "1.9.3"
ktor = "3.3.1"
vlcj = "4.11.0"
fluent-ui = "v0.1.0"
windowStyler = "0.3.3-SNAPSHOT"
oshi = "5.8.6"
versioncompare = "1.4.1"
krypto = "4.0.10"
jackson = "2.20.0"
koin = "4.1.1"
coil = "3.3.0"
mediamp = "0.0.29"
multiplatformSettings = "1.3.0"
haze = "1.6.10"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-testJunit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { module = "junit:junit", version.ref = "junit" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
androidx-testExt-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-testExt" }
androidx-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "androidx-espresso" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-collection = { module = "androidx.collection:collection", version.ref = "androidx-collection" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity" }
androidx-lifecycle-viewmodelCompose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtimeCompose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
kotlinx-coroutinesSwing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
kotlinx-collections-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlinx-collections-immutable" }
#compose-webview = {module = "io.github.kevinnzou:compose-webview-multiplatform", version.ref = "composeWebView"}
androidx-runtime-desktop = { group = "androidx.compose.runtime", name = "runtime-desktop", version.ref = "runtimeDesktop" }
ktor-http = { group = "io.ktor", name = "ktor-http", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-jackson = { module = "io.ktor:ktor-serialization-jackson", version.ref = "ktor" }
vlcj = { group = "uk.co.caprica", name = "vlcj", version.ref = "vlcj" }
fluent-ui = { group = "io.github.compose-fluent", name = "fluent", version.ref = "fluent-ui" }
fluent-icons = { group = "io.github.compose-fluent", name = "fluent-icons-extended", version.ref = "fluent-ui" }
fluent-desktop = { group = "io.github.compose-fluent", name = "fluent-desktop", version.ref = "fluent-ui" }
window-styler = { module = "com.mayakapps.compose:window-styler", version.ref = "windowStyler" }
oshi-core = { group = "com.github.oshi", name = "oshi-core", version.ref = "oshi" }
versioncompare = { group = "io.github.g00fy2", name = "versioncompare", version.ref = "versioncompare" }
krypto = { group = "com.soywiz.korlibs.krypto", name = "krypto", version.ref = "krypto" }
kotlin-reflect = { group = "org.jetbrains.kotlin", name = "kotlin-reflect", version.ref = "kotlin" }
jackson-databind = { group = "com.fasterxml.jackson.core", name = "jackson-databind", version.ref = "jackson" }
jackson-module-kotlin = { group = "com.fasterxml.jackson.module", name = "jackson-module-kotlin", version.ref = "jackson" }
koin-compose = { group = "io.insert-koin", name = "koin-compose", version.ref = "koin" }
koin-compose-viewmodel = { group = "io.insert-koin", name = "koin-compose-viewmodel", version.ref = "koin" }
coil-compose = { group = "io.coil-kt.coil3", name = "coil-compose", version.ref = "coil" }
coil-network-okhttp = { group = "io.coil-kt.coil3", name = "coil-network-okhttp", version.ref = "coil" }
#mediamp-vlc = { group = "org.openani.mediamp", name = "mediamp-vlc", version.ref = "mediamp" }
#mediamp-vlc-compose = { group = "org.openani.mediamp", name = "mediamp-vlc-compose", version.ref = "mediamp" }
mediamp-all = { group = "org.openani.mediamp", name = "mediamp-all", version.ref = "mediamp" }
multiplatform-settings = { group = "com.russhwolf", name = "multiplatform-settings", version.ref = "multiplatformSettings" }
multiplatform-settings-no-arg = { group = "com.russhwolf", name = "multiplatform-settings-no-arg", version.ref = "multiplatformSettings" }
haze = { group = "dev.chrisbanes.haze", name = "haze", version.ref = "haze" }
haze-materials = { group = "dev.chrisbanes.haze", name = "haze-materials", version.ref = "haze" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
composeHotReload = { id = "org.jetbrains.compose.hot-reload", version.ref = "composeHotReload" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "composeMultiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }